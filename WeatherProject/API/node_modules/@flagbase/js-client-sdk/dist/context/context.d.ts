import { Config } from "./config";
import { Identity } from "./identity";
import { Flagset, Flag } from "./flags";
import { InternalData } from "./internal-data";
export interface IContext {
    getConfig: () => Config;
    setConfig: (c: Partial<Config>) => void;
    getIdentity: () => Identity;
    setIdentity: (i: Partial<Identity>) => void;
    getIdentityTraits: () => Identity["traits"];
    setIdentityTraits: (identityTraits: Identity["traits"]) => void;
    getAllFlags: () => Flagset;
    getFlag: (flagKey: string) => Flag;
    setFlag: (flagKey: string, flag: Flag) => void;
    getInternalData: () => InternalData;
    setInternalData: (i: Partial<InternalData>) => void;
}
export default function Context(clientKey: string, clientConfig: Config, userIdentity: Identity): {
    getConfig: () => Config;
    setConfig: (c: Partial<Config>) => void;
    getIdentity: () => Identity;
    setIdentity: (i: Partial<Identity>) => void;
    getIdentityTraits: () => {
        [key: string]: string | number;
    };
    setIdentityTraits: (identityTraits: {
        [key: string]: string | number;
    }) => void;
    getAllFlags: () => Flagset;
    getFlag: (flagKey: string) => Flag;
    setFlag: (flagKey: string, flag: Flag) => void;
    getInternalData: () => InternalData;
    setInternalData: (i: Partial<InternalData>) => void;
};
